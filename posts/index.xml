<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Sidereus Hu</title>
    <link>https://sidereushu.github.io/posts/</link>
    <description>Recent content in Posts on Sidereus Hu</description>
    <generator>Hugo -- 0.148.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 31 Aug 2025 16:57:25 +0800</lastBuildDate>
    <atom:link href="https://sidereushu.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Poseidon Hash Algebraic Attacks (Calculation Tools)</title>
      <link>https://sidereushu.github.io/posts/poseidon-hash-algebraic-attacks-calculation-tools/</link>
      <pubDate>Sun, 31 Aug 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/poseidon-hash-algebraic-attacks-calculation-tools/</guid>
      <description>&lt;br&gt;
&lt;p&gt;In recent years, &amp;ldquo;ZK-friendly&amp;rdquo; hash functions designed for zero-knowledge proof (ZK) scenarios have received widespread attention. They are typically based on carefully constructed algebraic structures to achieve lower constraint counts in arithmetic circuits, thereby enabling higher efficiency in proof systems. However, it is precisely this algebraic friendliness that exposes potential attack surfaces under certain analysis models. Particularly in recent years, algebraic analysis methods—such as Gröbner basis attacks and polynomial degree reduction techniques using subspace trails—have gained significant research interest in the cryptanalysis field and have gradually become one of the core tools for evaluating the security of such hash functions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Overview and Evaluation of Round-by-Round Modeling Analysis for Poseidon Hash</title>
      <link>https://sidereushu.github.io/posts/overview-and-evaluation-of-round-by-round-modeling-analysis-for-poseidon-hash/</link>
      <pubDate>Mon, 25 Aug 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/overview-and-evaluation-of-round-by-round-modeling-analysis-for-poseidon-hash/</guid>
      <description>&lt;br&gt;
&lt;p&gt;Poseidon is a &lt;strong&gt;ZK-friendly hash function&lt;/strong&gt;, and its security evaluation largely relies on theoretical modeling of the complexity of &lt;strong&gt;Gröbner basis (GB) attacks&lt;/strong&gt;. Early security analyses (such as [GKR+19], [GLR+20]) primarily employed &lt;strong&gt;input–output modeling&lt;/strong&gt; (directly converting the input-output relationship of the entire function into a polynomial equation system) and calculated the so-called &lt;strong&gt;degree of regularity&lt;/strong&gt; on this model to estimate the complexity of GB attacks.&lt;/p&gt;
&lt;p&gt;In [GLR+20], another approach was mentioned—&lt;strong&gt;round-level modeling&lt;/strong&gt;: introducing new variables for each S-Box in each round, thereby decomposing the entire function into equation systems for multiple rounds.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Poseidon Hash Algebraic Attack Analysis (Designer&#39;s Perspective)</title>
      <link>https://sidereushu.github.io/posts/poseidon-hash-algebraic-attack-analysis-designers-perspective/</link>
      <pubDate>Sun, 17 Aug 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/poseidon-hash-algebraic-attack-analysis-designers-perspective/</guid>
      <description>&lt;br&gt;
&lt;p&gt;In recent years, &amp;ldquo;ZK-friendly&amp;rdquo; hash functions designed for zero-knowledge proof (ZK) scenarios have gained widespread attention. They are typically based on carefully constructed algebraic structures to exhibit lower constraint counts in arithmetic circuits, thereby achieving higher efficiency in proof systems. However, it is precisely this algebraic friendliness that exposes them to potential attack surfaces under certain analytical models. Particularly in recent years, algebraic analysis methods—such as Gröbner basis attacks and polynomial degree reduction techniques utilizing subspace trajectories—have seen significant research interest in the cryptanalysis field and have gradually become one of the core tools for evaluating the security of such hash functions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Poseidon Hash Algebraic Attack Analysis (Analyst&#39;s Perspective)</title>
      <link>https://sidereushu.github.io/posts/poseidon-hash-algebraic-attack-analysis-analysts-perspective/</link>
      <pubDate>Tue, 12 Aug 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/poseidon-hash-algebraic-attack-analysis-analysts-perspective/</guid>
      <description>&lt;br&gt;
&lt;p&gt;In recent years, &amp;ldquo;ZK-friendly&amp;rdquo; hash functions designed for zero-knowledge proof (ZK) scenarios have gained widespread attention. They are typically based on carefully constructed algebraic structures to exhibit lower constraint counts in arithmetic circuits, thereby achieving higher efficiency in proof systems. However, it is precisely this algebraic friendliness that exposes them to potential attack surfaces under certain analytical models. Particularly in recent years, algebraic analysis methods—such as Gröbner basis attacks and polynomial degree reduction techniques utilizing subspace trajectories—have seen significant research interest in the cryptanalysis field and have gradually become one of the core tools for evaluating the security of such hash functions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Poseidon2 Hash Security Analysis: Gröbner Basis Attack Evaluation</title>
      <link>https://sidereushu.github.io/posts/poseidon2-hash-security-analysis--gr%C3%B6bner-basis-attack-evaluation/</link>
      <pubDate>Sat, 02 Aug 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/poseidon2-hash-security-analysis--gr%C3%B6bner-basis-attack-evaluation/</guid>
      <description>&lt;br&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Work&lt;/th&gt;
          &lt;th&gt;Key Idea&lt;/th&gt;
          &lt;th&gt;Effectiveness on Poseidon&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;[FP20]&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Closed-form degree expression&lt;/td&gt;
          &lt;td&gt;Useful for modeling GB attacks&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;[BBLP22]&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Skipping (multiple) full rounds&lt;/td&gt;
          &lt;td&gt;Reduces effective non-linear depth&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;[ABM24]&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Round-level GB modeling&lt;/td&gt;
          &lt;td&gt;Shows underestimated vulnerability at κ = 1024&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;[BBL+24]&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;FreeLunch GB attacks&lt;/td&gt;
          &lt;td&gt;Not effective due to low S-box degree&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;[KLR24]&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;Six Worlds&amp;rdquo; framework&lt;/td&gt;
          &lt;td&gt;Not yet applied; potential for future work&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;[GKR25]&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Forward GB Attack Exploiting Subspace Trails&lt;/td&gt;
          &lt;td&gt;original analysis under- or overestimates the number of rounds needed for security.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;[BBB+25]&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Iterated resultants&lt;/td&gt;
          &lt;td&gt;Reduces to simple univariate case&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h2 id=&#34;key-points&#34;&gt;Key Points&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Evolution of Attack Methods&lt;/strong&gt;: Beyond traditional analytical approaches such as statistical analysis, algebraic attacks (particularly Gröbner basis attacks) have been recognized by the academic community as significantly more effective and have become the primary research focus in recent years.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parameter Customization Challenges&lt;/strong&gt;: Poseidon hash offers extensive customizable parameter space, which &lt;strong&gt;leads to issues of conservative security assumptions and potential overestimation&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Current Research Status&lt;/strong&gt;: The results provided by [ABM24] are excellent, but their acceptance in the community remains limited at present.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In [GKR25], the authors present a comprehensive analysis of Gröbner basis attacks against Poseidon2 in Sponge mode through Table 5. This analysis is based on a two-step approach: the GB step (Macaulay bound) and the FGLM step (&lt;code&gt;conjectured dI&lt;/code&gt;). Subsequently, the authors derive the minimum partial rounds values $r_P$ that can be configured, as shown in Table 3.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Practical Recommendations (for Poseidon2 &#43; BLS12-381 &#43; Compress Mode)</title>
      <link>https://sidereushu.github.io/posts/practical-recommendations-for-poseidon2-&#43;-bls12-381-&#43;-compress-mode/</link>
      <pubDate>Sun, 27 Jul 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/practical-recommendations-for-poseidon2-&#43;-bls12-381-&#43;-compress-mode/</guid>
      <description>&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Suggested Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Parameter&lt;/th&gt;
          &lt;th&gt;Suggested (Width 2)&lt;/th&gt;
          &lt;th&gt;Suggested (Width 3)&lt;/th&gt;
          &lt;th&gt;Notes&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Prime Field&lt;/td&gt;
          &lt;td&gt;BLS12-381&lt;/td&gt;
          &lt;td&gt;BLS12-381&lt;/td&gt;
          &lt;td&gt;Newly supported field in Gnark&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Width &lt;em&gt;t&lt;/em&gt;&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;Width 3 is preferred if Gnark supports it&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;S-box&lt;/td&gt;
          &lt;td&gt;$x^5$&lt;/td&gt;
          &lt;td&gt;$x^5$&lt;/td&gt;
          &lt;td&gt;Common and secure choice over prime fields&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Full Rounds&lt;/td&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;Avoid using fewer than 8 rounds&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Partial Rounds&lt;/td&gt;
          &lt;td&gt;22&lt;/td&gt;
          &lt;td&gt;14–17&lt;/td&gt;
          &lt;td&gt;Based on updated recommendations&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Mode&lt;/td&gt;
          &lt;td&gt;Compress Mode&lt;/td&gt;
          &lt;td&gt;Compress Mode&lt;/td&gt;
          &lt;td&gt;Used for input compression in UTXO models&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Security Level&lt;/td&gt;
          &lt;td&gt;≥128 bits&lt;/td&gt;
          &lt;td&gt;≥128 bits&lt;/td&gt;
          &lt;td&gt;Default setting meets the requirement&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;additional-notes&#34;&gt;Additional Notes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Security Analysis&lt;/strong&gt;: Considers recent advances in algebraic attacks such as Gröbner basis methods, [KR21], [BCD+20], [ABM23], and [GKR25].&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cryptographic Sponge Functions: The Foundation of ZK-Friendly Hash Constructions</title>
      <link>https://sidereushu.github.io/posts/cryptographic-sponge-functions--the-foundation-of-zk-friendly-hash-constructions/</link>
      <pubDate>Sat, 26 Jul 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/cryptographic-sponge-functions--the-foundation-of-zk-friendly-hash-constructions/</guid>
      <description>&lt;br&gt;
&lt;p&gt;In modern cryptography, particularly in zero-knowledge proofs and high-performance hash designs (such as Poseidon, Rescue, and Griffin), one fundamental building block appears repeatedly: the &lt;strong&gt;cryptographic sponge function&lt;/strong&gt;.&lt;br&gt;
It not only offers an elegant absorb-and-squeeze paradigm but also strikes a principled balance between &lt;strong&gt;security and efficiency&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;img alt=&#34;SpongeFunc&#34; loading=&#34;lazy&#34; src=&#34;https://sidereushu.github.io/images/SpongeFunc.png&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h3 id=&#34;i-what-is-a-sponge-function&#34;&gt;I. What is a Sponge Function?&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;sponge&lt;/strong&gt; is a flexible cryptographic structure used to absorb an input of arbitrary length and squeeze out a fixed or extensible output. Its power lies in its simplicity, relying only on a single state and a permutation function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ZK Proofs Are Not the Essence of Layer 0, Trust Abstraction Is</title>
      <link>https://sidereushu.github.io/posts/zk-proofs-are-not-the-essence-of-layer-0-trust-abstraction-is/</link>
      <pubDate>Thu, 17 Jul 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/zk-proofs-are-not-the-essence-of-layer-0-trust-abstraction-is/</guid>
      <description>&lt;br&gt;
&lt;p&gt;In the competition of Web3 infrastructure, an increasing number of projects claim to be building &amp;ldquo;the TCP/IP of Web3.&amp;rdquo; Among these, Zero-Knowledge (ZK) proof technology has gained significant attention due to its powerful verification capabilities, with many Layer 0 projects positioning ZK proofs as their core competitive advantage. However, we need to think deeply: Are ZK proofs truly the essence of Layer 0?&lt;/p&gt;
&lt;p&gt;Let us approach this question from a more fundamental perspective.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Web3’s Missing Foundation - Why It Needs a New TCP/IP</title>
      <link>https://sidereushu.github.io/posts/web3s-missing-foundation--why-it-needs-a-new-tcp-ip/</link>
      <pubDate>Tue, 15 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://sidereushu.github.io/posts/web3s-missing-foundation--why-it-needs-a-new-tcp-ip/</guid>
      <description>&lt;br&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&amp;ldquo;The internet was designed to be open, but the platforms built on top of it are not.&amp;rdquo;&lt;/strong&gt;&lt;br&gt;
——Chris Dixon, &lt;em&gt;Rebooting the Internet&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;br&gt;
&lt;h3 id=&#34;0-from-open-web1-to-centralized-web2-the-legacy-of-missing-trust&#34;&gt;0. From Open Web1 to Centralized Web2: The Legacy of Missing Trust&lt;/h3&gt;
&lt;p&gt;The Web1 era began with openness. Born out of academic and military collaboration, the TCP/IP protocol stack laid the foundation for global connectivity. TCP/IP was — and remains — an &lt;strong&gt;open and permissionless stack&lt;/strong&gt;: any device following the protocol can join the network. This property of &lt;em&gt;permissionless connectivity&lt;/em&gt; created the early decentralized flavor of the Internet.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Post-Quantum Readiness in Blockchain: Threats, Roadmaps, and Migration Strategy III</title>
      <link>https://sidereushu.github.io/posts/post-quantum-readiness-in-blockchain---threats-roadmaps-and-migration-strategy-iii/</link>
      <pubDate>Sun, 13 Jul 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/post-quantum-readiness-in-blockchain---threats-roadmaps-and-migration-strategy-iii/</guid>
      <description>&lt;br&gt;
&lt;h2 id=&#34;timeline-for-post-quantum-migration&#34;&gt;Timeline for Post-Quantum Migration&lt;/h2&gt;
&lt;p&gt;According to analysis by Chaincode Labs, Bitcoin’s transition to post-quantum cryptography (PQC) can follow two main strategies: a &lt;strong&gt;short-term contingency plan&lt;/strong&gt; (cf. Figure 1) and a &lt;strong&gt;long-term comprehensive path&lt;/strong&gt; (cf. Figure 2).&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;short-term strategy&lt;/strong&gt; focuses on deploying a basic quantum-resistant option within &lt;strong&gt;1 to 2 years&lt;/strong&gt;, offering a fallback mechanism in case cryptographically relevant quantum computers (CRQCs) emerge sooner than expected. This involves proposing a minimal PQC signature scheme through a BIP, implementing it in Bitcoin Core, and enabling voluntary migration of vulnerable UTXOs. While not optimized for all use cases, it provides immediate protection for at-risk users and critical institutions. Success depends on close coordination across the technical community and early involvement from major Bitcoin holders.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Post-Quantum Readiness in Blockchain: Threats, Roadmaps, and Migration Strategy II</title>
      <link>https://sidereushu.github.io/posts/post-quantum-readiness-in-blockchain---threats-roadmaps-and-migration-strategy-ii/</link>
      <pubDate>Sat, 12 Jul 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/post-quantum-readiness-in-blockchain---threats-roadmaps-and-migration-strategy-ii/</guid>
      <description>&lt;br&gt;
&lt;h2 id=&#34;post-quantum-cryptography-pqc&#34;&gt;Post-Quantum Cryptography (PQC)&lt;/h2&gt;
&lt;p&gt;Post-Quantum Cryptography has become a critical solution to counter the threat posed by scalable, controllable quantum computers to current cryptographic systems.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Urgency of PQC&lt;/strong&gt;: Originates from &lt;strong&gt;Peter Shor’s 1995 algorithm&lt;/strong&gt;, which can factor integers and compute discrete logarithms in polynomial time, effectively breaking mainstream schemes like RSA, DH, and ECC.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PQC is &lt;strong&gt;not a single algorithm&lt;/strong&gt;, but a set of &lt;strong&gt;parallel technical approaches&lt;/strong&gt;, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Lattice-based cryptography&lt;/strong&gt;: The most promising category with well-established theoretical foundations;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Post-Quantum Readiness in Blockchain: Threats, Roadmaps, and Migration Strategy I</title>
      <link>https://sidereushu.github.io/posts/post-quantum-readiness-in-blockchain---threats-roadmaps-and-migration-strategy-i/</link>
      <pubDate>Thu, 10 Jul 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/post-quantum-readiness-in-blockchain---threats-roadmaps-and-migration-strategy-i/</guid>
      <description>&lt;br&gt;
&lt;h3 id=&#34;bitcoins-security-and-the-threat-from-quantum-computing&#34;&gt;Bitcoin&amp;rsquo;s Security and the Threat from Quantum Computing&lt;/h3&gt;
&lt;p&gt;Bitcoin&amp;rsquo;s security relies on a &lt;strong&gt;cryptographic assumption that has long been considered unbreakable under current technological conditions&lt;/strong&gt;. However, the emergence of quantum computers &lt;strong&gt;could undermine this assumption within the next decade&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;At the core of Bitcoin’s cryptographic foundation are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the &lt;strong&gt;Elliptic Curve Digital Signature Algorithm (ECDSA)&lt;/strong&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;and, since 2021, the introduction of &lt;strong&gt;Schnorr signatures&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both schemes are based on the &lt;strong&gt;Elliptic Curve Discrete Logarithm Problem (ECDLP)&lt;/strong&gt;, which is &lt;strong&gt;asymmetric&lt;/strong&gt; in nature: deriving the public key from a private key is easy, but reversing the process is believed to require trillions of years even on today’s most powerful supercomputers.&lt;br&gt;
However, in the face of &lt;strong&gt;cryptographically relevant quantum computers (CRQCs)&lt;/strong&gt;, this asymmetry may collapse — &lt;strong&gt;deriving the private key from the public key could take only hours or days&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Notes | What is Quantum Computing? Implications for RSA &amp; ECC</title>
      <link>https://sidereushu.github.io/posts/notes---what-is-quantum-computing-implications-for-rsa--ecc/</link>
      <pubDate>Tue, 13 May 2025 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/notes---what-is-quantum-computing-implications-for-rsa--ecc/</guid>
      <description>&lt;br&gt;
&lt;h3 id=&#34;what-is-quantum-computing&#34;&gt;❓What is Quantum Computing?&lt;/h3&gt;
&lt;p&gt;Quantum computing harnesses the quantum states of microscopic particles—such as photons, electrons, or atoms—to process information. It is fundamentally based on several key principles: &lt;strong&gt;superposition&lt;/strong&gt;, &lt;strong&gt;entanglement&lt;/strong&gt;, &lt;strong&gt;coherence&lt;/strong&gt;, and the &lt;strong&gt;no-cloning theorem&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As early as &lt;strong&gt;1982&lt;/strong&gt;, &lt;strong&gt;Professor Richard Feynman&lt;/strong&gt; famously stated:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Nature isn’t classical, damn it, and if you want to make a simulation of nature, you’d better make it quantum mechanical.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt=&#34;Feynman&#34; loading=&#34;lazy&#34; src=&#34;https://sidereushu.github.io/images/screenshot-Feynman.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;This insight laid the conceptual foundation for building computational tools using quantum systems themselves, rather than relying on classical approximations of quantum behavior.&lt;/p&gt;</description>
    </item>
    <item>
      <title>From Macro to Micro - A Computational Revolution Reshaping Cryptography</title>
      <link>https://sidereushu.github.io/posts/from-macro-to-micro---a-computational-revolution-reshaping-cryptography/</link>
      <pubDate>Fri, 15 Nov 2024 16:57:25 +0800</pubDate>
      <guid>https://sidereushu.github.io/posts/from-macro-to-micro---a-computational-revolution-reshaping-cryptography/</guid>
      <description>&lt;p&gt;Throughout the evolution of human civilization, the pursuit of computational power has never ceased. From $\underline{mechanical ~computation}$ to $\underline{electronic ~computation}$, we now stand at the dawn of a new era — $\mathbf{on ~the ~verge ~of ~quantum ~computing. }$&lt;/p&gt;
&lt;p&gt;The core breakthrough of quantum computing does not lie in macro-level advancements such as “faster” transistors or “stronger” chips, but rather in &lt;strong&gt;a paradigm shift from macro to micro&lt;/strong&gt;: it no longer relies on the classical binary of 0 and 1 but leverages the peculiar properties of quantum superposition and entanglement at the particle level to build $\underline{an ~entirely ~new ~computational ~logic}$. This logic cannot be simulated by traditional electronic computers, much like nuclear weapons cannot be replicated with chemical explosives—their energies are simply not on the same scale.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://sidereushu.github.io/posts/images/short-term/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sidereushu.github.io/posts/images/short-term/</guid>
      <description></description>
    </item>
  </channel>
</rss>
